@import url("https://fonts.googleapis.com/css2?family=Fredoka:wght@500&family=Roboto+Mono:wght@100;400;500;700&display=swap");

/* VARIABLES: */
:root {
	--cell-background-color: hsl(
		var(--hue, 248),
		var(--saturation, 20%),
		calc(var(--lightness-offset, 0%) + var(--lightness, 43%))
	);
	--wrong-color: hsl(
		var(--hue, 5),
		var(--saturation, 80%),
		calc(var(--lightness-offset, 0%) + var(--lightness, 63%))
	);
	--wrong-location-color: hsl(
		var(--hue, 35),
		var(--saturation, 84%),
		calc(var(--lightness-offset, 0%) + var(--lightness, 73%))
	);
	--right-color: hsl(
		var(--hue, 142),
		var(--saturation, 76%),
		calc(var(--lightness-offset, 0%) + var(--lightness, 68%))
	);
	--background-color: hsl(252, 46%, 19%);
}

/* GENERAL: */
html,
body {
	padding: 1em;
	margin: 0;
	font-family: "Fredoka", sans-serif;
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100vw;
	height: 100vh;
	background-color: var(--background-color);
	color: white;
	transition: 0.5s;
	flex-direction: column;
	font-size: clamp(0.5rem, 2.5vmin, 2.5rem);
	overflow: hidden;
}

@media only screen and (max-width: 799px) {
	html,
	body {
		height: 90vh;
	}
}

a {
	color: inherit;
	text-decoration: none;
}

* {
	box-sizing: border-box;
}

.hidden {
	transition: 0.5s;
	opacity: 0;
	visibility: hidden;
}

.grid {
	padding: 0 !important;
}

::before,
::after {
	border-color: white !important;
}

*,
*::before,
*::after {
	box-sizing: border-box;
	padding: 0;
}

.h1-center {
	text-align: center;
	user-select: none;
}

/* INPUTS: */

.lightTextField {
	background-color: #ffffff2f;
	border-radius: 4px;
}
.lightTextField input,
.lightTextField label {
	color: white !important;
}

/* TUTORIAL: */

.Tutorial {
	/* position: fixed;
	background-color: aquamarine;
	width: 100%;
	height: 100%;
	top: 0px;
	left: 0px;
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 10; */
}

.Tutorial-container {
	position: fixed;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	z-index: 10;
	margin: auto;
	width: 100vw;
	height: 100vh;
	background-color: var(--background-color) !important;
	display: flex;
	align-items: center;
	color: white !important;
	border-radius: 20px !important;
}
.Tutorial-text {
	font-weight: light;
	margin: 0px 10% 0px 10%;
	font-size: 2rem;
	text-align: center;
}

.Tutorial-correct {
	color: var(--right-color);
}

.Tutorial-wrong-spot {
	color: var(--wrong-location-color);
}

.Tutorial-wrong {
	color: var(--wrong-color);
}

/* KEYBOARD: */

@media only screen and (max-width: 799px) {
	.keyboard {
		display: grid;
		grid-template-columns: repeat(20, minmax(auto, 1.5em));
		grid-auto-rows: 7em;
		gap: 0.5em;
		justify-content: center;
	}
	.key:focus {
		transition: 0.25s;
		transform: translate(0px, -2px);
		cursor: pointer;
		--lightness: 60%;
	}
}

@media only screen and (min-width: 800px) {
	.keyboard {
		display: grid;
		grid-template-columns: repeat(20, minmax(auto, 1.5em));
		grid-auto-rows: 3em;
		gap: 0.25em;
		justify-content: center;
	}
}

.key {
	font-size: inherit;
	grid-column: span 2;
	border: none;
	padding: 0;
	font-family: "Fredoka", sans-serif;
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 0.25em;
	transition: 0.25s;
	background-color: hsl(
		var(--hue, 248),
		var(--saturation, 20%),
		calc(var(--lightness-offset, 0%) + var(--lightness, 43%))
	);
	color: white;
	fill: white;
	user-select: none;
	animation: appear 0.5s ease-in-out;
}

.key > svg {
	width: 2em;
	height: 2em;
}

.big-key {
	grid-column: span 3;
}

.key:hover {
	transition: 0.25s;
	transform: translate(0px, -2px);
	cursor: pointer;
	--lightness-offset: 20%;
}

.key:active {
	transition: 0.15s;
	transform: translate(0px, 0px);
}

.wrong {
	/* --hue: 0;
	--saturation: 80%;
	--lightness: 50%; */
	transition: 0.5s;
	color: black !important;
	background-color: hsl(
		var(--hue, 5),
		var(--saturation, 80%),
		calc(var(--lightness-offset, 0%) + var(--lightness, 63%))
	);
}
.wrong-location {
	/* --hue: 40;
	--saturation: 90%;
	--lightness: 50%; */
	transition: 0.5s;
	color: black !important;
	background-color: hsl(
		var(--hue, 35),
		var(--saturation, 84%),
		calc(var(--lightness-offset, 0%) + var(--lightness, 63%))
	);
}
.right {
	/* --hue: 115;
	--saturation: 90%;
	--lightness: 35%; */
	transition: 0.5s;
	color: black !important;
	background-color: hsl(
		var(--hue, 142),
		var(--saturation, 76%),
		calc(var(--lightness-offset, 0%) + var(--lightness, 68%))
	);
}

/* GAMEBOARD: */

.Gameboard {
	display: grid;
	justify-content: center;
	align-content: center;
	flex-grow: 1;
	grid-template-columns: repeat(5, 3em);
	grid-template-rows: repeat(6, 3em);
	gap: 0.25em;
	margin-bottom: 1em;
}

@media only screen and (max-width: 799px) {
	.Gameboard {
		grid-template-columns: repeat(5, 5em);
		grid-template-rows: repeat(6, 5em);
	}
}

.Gameboard-cell {
	border-radius: 0.15em;
	border: 2px solid var(--cell-background-color);
	font-size: 2em;
	text-transform: uppercase;
	font-weight: bold;
	color: white;
	fill: white;
	user-select: none;
	display: flex;
	align-items: center;
	justify-content: center;
	animation: appear 0.5s ease-in-out;
}

@keyframes appear {
	0% {
		transform: scale(0);
	}
}
